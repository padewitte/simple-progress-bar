!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define("simpleProgressBar",[],t):"object"==typeof exports?exports.simpleProgressBar=t():e.simpleProgressBar=t()}(this,function(){return function(e){function t(r){if(n[r])return n[r].exports;var i=n[r]={i:r,l:!1,exports:{}};return e[r].call(i.exports,i,i.exports,t),i.l=!0,i.exports}var n={};return t.m=e,t.c=n,t.i=function(e){return e},t.d=function(e,n,r){t.o(e,n)||Object.defineProperty(e,n,{configurable:!1,enumerable:!0,get:r})},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},t.p="",t(t.s=0)}([function(e,t,n){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function o(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}function a(e){var t=e;return Number.isNaN(parseInt(e,2))||(t=parseInt(e,2)),t}function u(e){return e.toLowerCase().replace(/-(.)/g,function(e,t){return t.toUpperCase()})}Object.defineProperty(t,"__esModule",{value:!0});var s=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),c=function(e){function t(e){var n,o;return r(this,t),console.log("Constructing a new progress bar"),e=n=i(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e)),e.addEventListener("mouseup",function(t){return console.log(t),0===t.button?e.increaseLimit():e.decreaseLimit(),t.preventDefault(),!1}),e.connected=!1,o=e,i(n,o)}return o(t,e),s(t,[{key:"connectedCallback",value:function(){console.log("Connected callback"),this.max=this.getAttribute("max")||3,this.current=this.getAttribute("current")||0,this.connected=!0,this.render()}},{key:"disconnectedCallback",value:function(){console.log("nothing currenlty done at deconnexion")}},{key:"adoptedCallback",value:function(){console.log("nothing currently done at adoption")}},{key:"attributeChangedCallback",value:function(e,t,n){console.log("Attribute change callback",e,n,"was",t),a(t)!==a(n)&&(this["_"+u(e)]=a(n),this.updateRendering(),this.dispatchEvent(new CustomEvent(e+"Change",{detail:{value:n}})))}},{key:"updateAttribute",value:function(e,t,n){if(console.log("Updating attribute",e,t),void 0!==t&&null!==t){var r=a(t);this["_"+u(e)]=r,this.updateRendering(),this.setAttribute(e,r)}else{var i=a(n);this["_"+u(e)]=i,this.updateRendering(),this.setAttribute(e,i)}}},{key:"getRatio",value:function(){return 0===this._current?0:Math.min(100,100*parseInt(this._current,2)/parseInt(this._max,2))}},{key:"updateRendering",value:function(){console.log("Updating rendering"),!0===this.connected&&(this.querySelector("#barStatus").style.width=this.getRatio()+"%",this.querySelector("#legenda").innerText=this._current+"/"+this._max,this.getRatio()>=100?this.dispatchEvent(new CustomEvent("limit-reach",{detail:{txt:"Limit reach",current:this.current,max:this.max}})):this.dispatchEvent(new CustomEvent("under-limit",{detail:{txt:"Under limit",current:this.current,max:this.max}})))}},{key:"render",value:function(){var e=this;console.log("Rendering the custome element"),this.innerHTML='\n      <style>\n        #progressBar {\n            position: relative;\n            width: 100%;\n            height: 30px;\n            background-color: rgb(100, 108, 119);\n            /*text-align: center;*/\n            display: flex;\n            align-items: center;\n            z-index: 1;\n        }\n        #barStatus {\n            position: absolute;\n            width: 1px;\n            left: 0;\n            top: 0;\n            height: 100%;\n            background-color: rgba(0, 0, 255, 0.5);\n            transition: width 2s;\n            z-index: 4;\n        }\n        #legenda {\n            color: #ffffff;\n            padding: 5px;\n            margin: auto;\n            z-index: 5;\n        }\n      </style>\n        <div id="progressBar">\n            <div id="legenda">'+this._current+"/"+this._max+'</div>\n            <div id="barStatus"></div>\n      </div>',window.setTimeout(function(){e.updateRendering()},10)}},{key:"increaseLimit",value:function(){this.max=parseInt(this.max,2)+1}},{key:"decreaseLimit",value:function(){this.max>0&&(this.max=parseInt(this.max,2)-1)}},{key:"increase",value:function(){this.current++}},{key:"decrease",value:function(){this.current--}},{key:"max",get:function(){return this._max},set:function(e){this.updateAttribute("max",e,3)}},{key:"current",get:function(){return this._current},set:function(e){this.updateAttribute("current",e,0)}}],[{key:"observedAttributes",get:function(){return["max","current"]}}]),t}(HTMLElement);window.customElements.get("simple-progress-bar")||window.customElements.define("simple-progress-bar",c),t.default=c,e.exports=t.default}])});